@startuml component-interaction

skinparam componentStyle rectangle
skinparam monochrome true
skinparam shadowing false
skinparam defaultFontName "Arial"
skinparam ArrowColor black
skinparam ArrowThickness 1.5

title "Component Interaction Diagram - NiFi Extensions"

!define COMPONENT(name) component name as "name"

cloud "External Services" {
  [Authentication Provider]
  [API Services]
}

package "Apache NiFi" {
  [NiFi Core] as NiFiCore

  package "CUI OSS Extensions" {
    [Token Factory Manager] as TokenFactory
    [JWT Token Extractor] as JWTExtractor
    [Token Validator] as TokenValidator
    [API Gateway] as APIGateway
    [Error Handler] as ErrorHandler
    [Configuration Manager] as ConfigManager
  }
}

database "Properties Repository" as PropsRepo

NiFiCore ..> [CUI OSS Extensions] : uses
TokenFactory --> [Authentication Provider] : requests tokens
JWTExtractor --> TokenFactory : gets token specs
TokenValidator --> TokenFactory : validates tokens
APIGateway --> [API Services] : routes requests
APIGateway --> TokenValidator : validates requests
ErrorHandler <-- TokenValidator : reports errors
ErrorHandler <-- APIGateway : reports errors
ConfigManager --> PropsRepo : loads/stores configs
TokenFactory --> ConfigManager : reads configuration
JWTExtractor --> ConfigManager : reads configuration
TokenValidator --> ConfigManager : reads configuration
APIGateway --> ConfigManager : reads configuration

note right of TokenFactory: Manages token creation\nand lifecycle

note bottom of ConfigManager: Provides centralized\nconfiguration management

note right of APIGateway: Routes API requests and\nhandles multi-tenant scenarios

@enduml