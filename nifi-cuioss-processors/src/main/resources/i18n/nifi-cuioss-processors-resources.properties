# MultiIssuerJWTTokenAuthenticator Resource Bundle (English - Default)

# Processor Description
processor.description=Validates JWT tokens from multiple issuers. Extracts JWT tokens from flow files, validates them against configured issuers, and routes flow files based on validation results.

# Relationships
relationship.success=FlowFiles with valid tokens will be routed to this relationship
relationship.authentication.failed=FlowFiles with invalid tokens will be routed to this relationship

# Property Descriptors
property.token.location.name=Token Location
property.token.location.description=Defines where to extract the token from

property.token.header.name=Token Header
property.token.header.description=The header name containing the token when using AUTHORIZATION_HEADER

property.custom.header.name=Custom Header Name
property.custom.header.description=The custom header name when using CUSTOM_HEADER

property.bearer.token.prefix.name=Bearer Token Prefix
property.bearer.token.prefix.description=The prefix to strip from the token (e.g., "Bearer ")

property.require.valid.token.name=Require Valid Token
property.require.valid.token.description=Whether to require a valid token for processing

property.jwks.refresh.interval.name=JWKS Refresh Interval
property.jwks.refresh.interval.description=Interval in seconds for refreshing JWKS keys

property.maximum.token.size.name=Maximum Token Size
property.maximum.token.size.description=Maximum token size in bytes

property.allowed.algorithms.name=Allowed Algorithms
property.allowed.algorithms.description=Comma-separated list of allowed JWT signing algorithms. Recommended secure algorithms: RS256, RS384, RS512, ES256, ES384, ES512, PS256, PS384, PS512. The 'none' algorithm is never allowed regardless of this setting.

property.require.https.for.jwks.name=Require HTTPS for JWKS URLs
property.require.https.for.jwks.description=Whether to require HTTPS for JWKS URLs. Strongly recommended for production environments.

property.jwks.connection.timeout.name=JWKS Connection Timeout
property.jwks.connection.timeout.description=Timeout in seconds for JWKS endpoint connections

# Dynamic Property Descriptors
property.issuer.dynamic.name=Issuer: {0} - {1}
property.issuer.dynamic.description=Configuration property '{0}' for issuer '{1}'
property.issuer.jwks.url.description=Configuration property '{0}' for issuer '{1}' (URL to JWKS endpoint)
property.issuer.issuer.description=Configuration property '{0}' for issuer '{1}' (Expected issuer claim value)
property.issuer.audience.description=Configuration property '{0}' for issuer '{1}' (Expected audience claim value)
property.issuer.client.id.description=Configuration property '{0}' for issuer '{1}' (Client ID for this application)
property.issuer.required.claims.description=Configuration property '{0}' for issuer '{1}' (Comma-separated list of required claims)

# Error Messages
error.no.token.found=No token found in the specified location: {0}
error.token.size.limit=Token exceeds maximum size limit of {0} bytes
error.token.malformed=Token is malformed (missing segments)
error.token.validation.failed=Token validation failed: {0}
error.unknown=An unknown error occurred: {0}

# Validation Error Messages
validation.issuer.missing.jwks=Issuer {0} is missing required JWKS URL
validation.issuer.missing.issuer=Issuer {0} is missing required issuer claim value
validation.issuer.invalid.url=Issuer {0} has invalid JWKS URL: {1}
validation.issuer.requires.https=HTTPS is required for JWKS URL but HTTP was provided for issuer {0}. Use HTTPS for production environments.

# UI Labels - Tab Names
Jwt.Validation.Issuer.Configuration=Issuer Configuration
Jwt.Validation.Token.Verification=Token Verification

# UI Labels - Issuer Configuration
issuer.config.description=Configure JWT issuers for token validation. Each issuer requires a name and properties like jwks-url and issuer URI.
issuer.config.issuer.name=Issuer Name
issuer.config.issuer.url=Issuer URI
issuer.config.issuer.url.description=The URI of the token issuer (must match the iss claim)
issuer.config.issuer.url.help=This value must exactly match the "iss" claim in JWT tokens. Example: https://auth.example.com/auth/realms/myrealm
issuer.config.jwks.url=JWKS URL
issuer.config.jwks.url.description=The URL of the JWKS endpoint
issuer.config.jwks.url.help=URL providing public keys for JWT signature verification. Usually ends with /.well-known/jwks.json
issuer.config.audience=Audience
issuer.config.audience.description=The expected audience claim value
issuer.config.audience.help=Optional: Expected "aud" claim value in JWT tokens. Leave blank to accept any audience.
issuer.config.client.id=Client ID
issuer.config.client.id.description=The client ID for token validation
issuer.config.client.id.help=Optional: Expected "azp" or "client_id" claim value. Used for additional token validation.
issuer.config.add=Add Issuer
issuer.config.save.issuer=Save Issuer
issuer.config.test.connection=Test Connection
issuer.config.test.connection.tooltip=Test connectivity to the JWKS endpoint and verify it returns valid keys
issuer.config.remove.tooltip=Delete this issuer configuration

# UI Labels - Token Verification
processor.jwt.tokenInput=Enter Token
processor.jwt.tokenInputDescription=Paste your JWT token for verification
processor.jwt.tokenInputPlaceholder=Paste token here...
processor.jwt.verifyToken=Verify Token
processor.jwt.verificationResults=Verification Results
